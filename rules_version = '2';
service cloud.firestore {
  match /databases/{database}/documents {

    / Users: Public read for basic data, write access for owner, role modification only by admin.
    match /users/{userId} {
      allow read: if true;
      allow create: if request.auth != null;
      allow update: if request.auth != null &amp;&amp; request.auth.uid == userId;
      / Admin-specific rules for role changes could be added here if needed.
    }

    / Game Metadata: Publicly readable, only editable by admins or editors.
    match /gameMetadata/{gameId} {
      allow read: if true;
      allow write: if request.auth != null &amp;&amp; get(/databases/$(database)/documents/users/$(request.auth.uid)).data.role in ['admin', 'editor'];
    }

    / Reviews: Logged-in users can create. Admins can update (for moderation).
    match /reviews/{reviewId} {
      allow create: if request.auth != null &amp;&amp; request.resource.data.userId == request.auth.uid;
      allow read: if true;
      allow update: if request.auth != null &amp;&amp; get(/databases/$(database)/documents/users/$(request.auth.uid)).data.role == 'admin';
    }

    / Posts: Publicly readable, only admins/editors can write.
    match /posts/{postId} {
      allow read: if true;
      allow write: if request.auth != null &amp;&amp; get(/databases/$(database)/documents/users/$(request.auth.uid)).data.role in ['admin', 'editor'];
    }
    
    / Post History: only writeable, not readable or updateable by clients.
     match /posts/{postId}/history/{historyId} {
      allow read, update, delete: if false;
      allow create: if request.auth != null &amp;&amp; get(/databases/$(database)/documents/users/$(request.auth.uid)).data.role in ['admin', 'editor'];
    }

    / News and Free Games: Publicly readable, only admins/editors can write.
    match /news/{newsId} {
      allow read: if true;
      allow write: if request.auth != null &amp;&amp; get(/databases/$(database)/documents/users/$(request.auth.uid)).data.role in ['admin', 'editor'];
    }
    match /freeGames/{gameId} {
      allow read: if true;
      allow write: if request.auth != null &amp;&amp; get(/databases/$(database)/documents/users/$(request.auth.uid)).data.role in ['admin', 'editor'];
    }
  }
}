rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public read for basic data, write access for owner, role modification only by admin.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      // Admin-specific rules for role changes could be added here if needed.
    }

    // Game Metadata: Publicly readable, only editable by admins or editors.
    match /gameMetadata/{gameId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    // Reviews: Logged-in users can create. Admins can update (for moderation).
    match /reviews/{reviewId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if true;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Posts: Publicly readable, only admins/editors can write.
    match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }
    
    // Post History: only writeable, not readable or updateable by clients.
     match /posts/{postId}/history/{historyId} {
      allow read, update, delete: if false;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    // News and Free Games: Publicly readable, only admins/editors can write.
    match /news/{newsId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }
    match /freeGames/{gameId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }
  }
}